apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: enhanced-ids
  labels:
    app: enhanced-ids
    component: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enhanced-ids
      component: prometheus
  template:
    metadata:
      labels:
        app: enhanced-ids
        component: prometheus
    spec:
      serviceAccountName: ids-service-account
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
          name: web
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=200h'
        - '--web.enable-lifecycle'
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1"
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-storage
          mountPath: /prometheus
      volumes:
      - name: prometheus-config
        configMap:
          name: ids-config
          items:
          - key: prometheus.yml
            path: prometheus.yml
          - key: ids_rules.yml
            path: ids_rules.yml
      - name: prometheus-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: enhanced-ids
  labels:
    app: enhanced-ids
    component: prometheus
spec:
  selector:
    app: enhanced-ids
    component: prometheus
  ports:
  - name: web
    port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: enhanced-ids
  labels:
    app: enhanced-ids
    component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enhanced-ids
      component: grafana
  template:
    metadata:
      labels:
        app: enhanced-ids
        component: grafana
    spec:
      serviceAccountName: ids-service-account
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
          name: web
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_SERVER_ROOT_URL
          value: "http://localhost:3000/grafana/"
        - name: GF_SERVER_SERVE_FROM_SUB_PATH
          value: "true"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: grafana-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: enhanced-ids
  labels:
    app: enhanced-ids
    component: grafana
spec:
  selector:
    app: enhanced-ids
    component: grafana
  ports:
  - name: web
    port: 3000
    targetPort: 3000
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: enhanced-ids
  labels:
    app: enhanced-ids
    component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enhanced-ids
      component: redis
  template:
    metadata:
      labels:
        app: enhanced-ids
        component: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command: ["redis-server", "--appendonly", "yes"]
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: redis-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: enhanced-ids
  labels:
    app: enhanced-ids
    component: redis
spec:
  selector:
    app: enhanced-ids
    component: redis
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  type: ClusterIP
